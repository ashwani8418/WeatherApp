{"version":3,"sources":["Component/WeatherCard.js","Component/Weather.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weatherMood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Weather","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","id","value","onChange","e","target","onKeyPress","event","key","autoFocus","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ff6644b.chunk.js","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n  const [weatherState, setWeatherState] = useState(\"\");\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weatherMood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n    if (weatherMood) {\r\n      switch (weatherMood) {\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-night-clear\");\r\n\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-day-haze\");\r\n\r\n          break;\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-cloud\");\r\n\r\n          break;\r\n        case \"Rain\":\r\n          setWeatherState(\"wi-rain-wind\");\r\n\r\n          break;\r\n        case \"Cloudy-gusts\":\r\n          setWeatherState(\"wi-day-cloudy-gusts\");\r\n\r\n          break;\r\n        case \"Day-snow-thunderstorm\":\r\n          setWeatherState(\"wi-day-snow-thunderstorm\");\r\n\r\n          break;\r\n        case \"Night\":\r\n          setWeatherState(\"wi-lunar-eclipse\");\r\n\r\n          break;\r\n        case \"Hail\":\r\n          setWeatherState(\"wi-day-hail\");\r\n\r\n          break;\r\n\r\n        default: setWeatherState(\"wi-day-sunny\")\r\n          break;\r\n      }\r\n    }\r\n  });\r\n\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <li className={`wi ${weatherState}`}></li>\r\n        </div>\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>\r\n              {temp}\r\n              {\"\\u00b0\"}deg\r\n            </span>\r\n          </div>\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weatherMood}</div>\r\n            <div className=\"place\">\r\n              {name}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"date\"> {new Date().toLocaleString()}</div>\r\n        {/* Four column Section */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <li className={\"wi wi-sunset\"}></li>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr}\r\n                <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <li className={\"wi wi-humidity\"}></li>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity} <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <li className={\"wi wi-barometer\"}></li>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure} <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <li className={\"wi wi-strong-wind\"}></li>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br />\r\n                Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\nimport WeatherCard from \"./WeatherCard\";\r\n\r\nconst Weather = () => {\r\n  const [searchValue, setSearchValue] = useState(\"Delhi\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=31403d46a9dd9d849e30f381fa1323a6`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      // console.log(data);\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weatherMood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const weatherInformation = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weatherMood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(weatherInformation);\r\n      // console.log(temp)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n        getWeatherInfo();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search...\"\r\n            \r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"searchButton\"\r\n            autoFocus={true}\r\n            onClick={getWeatherInfo}\r\n           \r\n          >\r\n            {\" \"}\r\n            Search{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* {} */}\r\n      <WeatherCard tempInfo={tempInfo} />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import './App.css';\nimport Weather from './Component/Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}